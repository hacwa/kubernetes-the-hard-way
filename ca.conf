[req]
distinguished_name = req_distinguished_name
prompt             = no
x509_extensions    = ca_x509_extensions

[ca_x509_extensions]
basicConstraints = CA:TRUE
keyUsage         = cRLSign, keyCertSign

[req_distinguished_name]
C   = UK
ST  = Manchester
L   = Seattle
CN  = CA

[admin]
distinguished_name = admin_distinguished_name
prompt             = no
req_extensions     = default_req_extensions

[admin_distinguished_name]
CN = admin
O  = system:masters

# Service Accounts
#
# The Kubernetes Controller Manager leverages a key pair to generate
# and sign service account tokens as described in the
# [managing service accounts](https://kubernetes.io/docs/admin/service-accounts-admin/)
# documentation.

[service-accounts]
distinguished_name = service-accounts_distinguished_name
prompt             = no
req_extensions     = default_req_extensions

[service-accounts_distinguished_name]
CN = service-accounts

# worker Nodes
#
# Kubernetes UKes a [special-purpose authorization mode](https://kubernetes.io/docs/admin/authorization/node/)
# called Node Authorizer, that specifically authorizes API requests made
# by [Kubelets](https://kubernetes.io/docs/concepts/overview/components/#kubelet).
# In order to be authorized by the Node Authorizer, Kubelets mUKt UKe a credential
# that identifies them as being in the `system:nodes` group, with a UKername
# of `system:node:<nodeName>`.

[k8s-worker-01-vm]

distinguished_name = k8s-worker-01-vm_distinguished_name
prompt             = no
req_extensions     = k8s-worker-01-vm_req_extensions

[k8s-worker-01-vm_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "k8s-worker-01-vm Certificate"
subjectAltName       = DNS:k8s-worker-01-vm, IP:127.0.0.1, IP:10.0.22.2, IP:10.0.20.2, IP:10.0.20.3, IP:10.0.20.4
subjectKeyIdentifier = hash

[k8s-worker-01-vm_distinguished_name]
CN = system:node:k8s-worker-01-vm
O  = system:nodes
C  = UK
ST = Manchester
L  = Seattle


[k8s-worker-02-vm]
distinguished_name = k8s-worker-02-vm_distinguished_name
prompt             = no
req_extensions     = k8s-worker-02-vm_req_extensions

[k8s-worker-02-vm_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "k8s-worker-02-vm Certificate"
subjectAltName       = DNS:k8s-worker-02-vm, IP:127.0.0.1, IP:10.0.22.3, IP:10.0.20.2, IP:10.0.20.3, IP:10.0.20.4
subjectKeyIdentifier = hash

[k8s-worker-02-vm_distinguished_name]
CN = system:node:k8s-worker-02-vm
O  = system:nodes
C  = UK
ST = Manchester
L  = Seattle

[k8s-worker-03-vm]
distinguished_name = k8s-worker-03-vm_distinguished_name
prompt             = no
req_extensions     = k8s-worker-03-vm_req_extensions

[k8s-worker-03-vm_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "k8s-worker-03-vm Certificate"
subjectAltName       = DNS:k8s-worker-03-vm, IP:127.0.0.1, IP:10.0.22.4, IP:10.0.20.2, IP:10.0.20.3, IP:10.0.20.4
subjectKeyIdentifier = hash

[k8s-worker-03-vm_distinguished_name]
CN = system:node:k8s-worker-03-vm
O  = system:nodes
C  = UK
ST = Manchester
L  = Seattle


# Kube Proxy Section
[kube-proxy]
distinguished_name = kube-proxy_distinguished_name
prompt             = no
req_extensions     = kube-proxy_req_extensions

[kube-proxy_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Kube Proxy Certificate"
subjectAltName       = DNS:kube-proxy, IP:127.0.0.1, IP:10.0.21.2, IP:10.0.21.3, IP:10.0.21.4, IP:10.0.20.2, IP:10.0.20.3, IP:10.0.20.4
subjectKeyIdentifier = hash

[kube-proxy_distinguished_name]
CN = system:kube-proxy
O  = system:node-proxier
C  = UK
ST = Manchester
L  = Seattle


# Controller Manager
[kube-controller-manager]
distinguished_name = kube-controller-manager_distinguished_name
prompt             = no
req_extensions     = kube-controller-manager_req_extensions

[kube-controller-manager_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Kube Controller Manager Certificate"
subjectAltName       = DNS:kube-proxy, IP:127.0.0.1, IP:10.0.21.2, IP:10.0.21.3, IP:10.0.21.4, IP:10.0.20.2, IP:10.0.20.3, IP:10.0.20.4

subjectKeyIdentifier = hash

[kube-controller-manager_distinguished_name]
CN = system:kube-controller-manager
O  = system:kube-controller-manager
C  = UK
ST = Manchester
L  = Seattle


# Scheduler
[kube-scheduler]
distinguished_name = kube-scheduler_distinguished_name
prompt             = no
req_extensions     = kube-scheduler_req_extensions

[kube-scheduler_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Kube Scheduler Certificate"
subjectAltName = DNS:kube-scheduler, IP:127.0.0.1, IP:10.0.21.2, IP:10.0.21.3, IP:10.0.21.4, IP:10.0.20.2, IP:10.0.20.3, IP:10.0.20.4
subjectKeyIdentifier = hash

[kube-scheduler_distinguished_name]
CN = system:kube-scheduler
O  = system:system:kube-scheduler
C  = UK
ST = Manchester
L  = Seattle


# API Server
#
# The Kubernetes API server is automatically assigned the `kubernetes`
# internal dns name, which will be linked to the first IP address (`10.32.0.1`)
# from the address range (`10.32.0.0/24`) reserved for internal clUKter
# services.

[kube-api-server]
distinguished_name = kube-api-server_distinguished_name
prompt             = no
req_extensions     = kube-api-server_req_extensions

[kube-api-server_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Kube Scheduler Certificate"
subjectAltName       = @kube-api-server_alt_names
subjectKeyIdentifier = hash

# API Server Certificates
[kube-api-server_alt_names]
IP.0  = 127.0.0.1
IP.1  = 10.32.0.1
IP.2  = 10.0.21.2
IP.3  = 10.0.21.3
IP.4  = 10.0.21.4
IP.5 = 10.0.20.2
IP.6 = 10.0.20.3
IP.7 = 10.0.20.4
DNS.0 = kubernetes
DNS.1 = kubernetes.default
DNS.2 = kubernetes.hacwa
DNS.3 = kubernetes.default.svc
DNS.4 = kubernetes.hacwa.svc
DNS.5 = kubernetes.default.svc.cluster
DNS.6 = kubernetes.hacwa.svc.cluster
DNS.7 = kubernetes.svc.cluster.local
DNS.8 = kubernetes.svc.hacwa.internal
DNS.9 = server.kubernetes.local
DNS.10 = server.hacwa.internal
DNS.11 = api-server.kubernetes.local
DNS.12 = api-server.hacwa.internal
DNS.13 = k8s-control-plane-01-vm.hacwa.internal
DNS.14 = k8s-control-plane-02-vm.hacwa.internal
DNS.15 = k8s-control-plane-03-vm.hacwa.internal
DNS.16 = k8s-control-plane-01-vm.hacwa.internal
DNS.17 = k8s-control-plane-02-vm.hacwa.internal
DNS.18 = k8s-control-plane-03-vm.hacwa.internal
DNS.19 = k8s-LB-01-vm.hacwa.internal
DNS.20 = k8s-LB-02-vm.hacwa.internal
DNS.21 = k8s-control-plane-01-vm
DNS.22 = k8s-control-plane-02-vm
DNS.23 = k8s-control-plane-03-vm
DNS.24 = k8s-control-plane-01-vm
DNS.25 = k8s-control-plane-02-vm
DNS.26 = k8s-control-plane-03-vm
DNS.27 = k8s-LB-01-vm
DNS.28 = k8s-LB-02-vm
DNS.29 = k8s-LB-VIP-vm
DNS.30 = k8s-LB-VIP-vm.hacwa.internal
DNS.31 = k8s-control-plane-01-vm.hacwa.internal
DNS.32 = k8s-control-plane-02-vm.hacwa.internal
DNS.33 = k8s-control-plane-03-vm.hacwa.internal
DNS.34 = k8s-control-plane-01-vm.hacwa.internal
DNS.35 = k8s-control-plane-02-vm.hacwa.internal
DNS.36 = k8s-control-plane-03-vm.hacwa.internal
DNS.37 = k8s-LB-01-vm.hacwa.internal
DNS.38 = k8s-LB-02-vm.hacwa.internal
DNS.39 = k8s-control-plane-01-vm
DNS.40 = k8s-control-plane-02-vm
DNS.41 = k8s-control-plane-03-vm
DNS.42 = k8s-control-plane-01-vm
DNS.43 = k8s-control-plane-02-vm
DNS.44 = k8s-control-plane-03-vm
DNS.45 = k8s-LB-01-vm
DNS.46 = k8s-LB-02-vm
DNS.47 = k8s-LB-VIP-vm
DNS.48 = k8s-LB-VIP-vm.hacwa.internal


[kube-api-server_distinguished_name]
CN = kubernetes
C  = UK
ST = Manchester
L  = Seattle


[default_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Admin Client Certificate"
subjectKeyIdentifier = hash
